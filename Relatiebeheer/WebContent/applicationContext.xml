<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<context:component-scan base-package="nl.dias" />
	<context:component-scan base-package="nl.lakedigital.as.taakbeheer.client" />

    <!--<cache:annotation-driven />-->

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                      name="zoekIdentificatie"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                      name="zoekIdentificatieCode"/>
            </set>
        </property>
    </bean>
    <cache:advice id="cachingBehavior" cache-manager="cacheManager">
        <cache:caching cache="zoekIdentificatie">
            <cache:cacheable method="zoekIdentificatie"/>
        </cache:caching>
        <cache:caching cache="zoekIdentificatieCode">
            <cache:cacheable method="zoekIdentificatieCode"/>
        </cache:caching>
    </cache:advice>

    <!-- apply the behavior to all the implementations of CustomerDataService interface-->
    <aop:config>
        <aop:advisor advice-ref="cachingBehavior"
                     pointcut="execution(* nl.lakedigital.djfc.client.identificatie.IdentificatieClient.*(..))"/>
    </aop:config>

    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry"/>
    <bean id="metricsService" class="nl.lakedigital.djfc.metrics.MetricsService">
        <property name="metricRegistry" ref="metricRegistry"/>
    </bean>

    <bean id="properties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:djfc.app.properties</value>
            </list>
        </property>
        <property name="placeholderPrefix" value="${"/>
    </bean>

    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
        <property name="maxUploadSize" value="50000000"/>
    </bean>

	<!-- Activemq connection factory -->
	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<constructor-arg index="0" value="tcp://localhost:61616" />
	</bean>

	<!-- ConnectionFactory Definition -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg ref="amqConnectionFactory" />
	</bean>



    <bean id="polisOpslaanResponseDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="pa.rb.polisOpslaanResponseQueue"/>
    </bean>
    <bean id="polisOpslaanResponseReciever" class="nl.dias.messaging.reciever.PolisOpslaanResponseReciever"/>

    <jms:listener-container container-type="default" connection-factory="connectionFactory" acknowledge="auto">
        <jms:listener destination="pa.rb.polisOpslaanResponseQueue" ref="polisOpslaanResponseReciever"
                      method="onMessage"/>
    </jms:listener-container>

    <bean id="schadeOpslaanResponseDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="pa.rb.schadeOpslaanResponseQueue"/>
    </bean>
    <bean id="schadeOpslaanResponseReciever" class="nl.dias.messaging.reciever.SchadeOpslaanResponseReciever"/>

    <jms:listener-container container-type="default" connection-factory="connectionFactory" acknowledge="auto">
        <jms:listener destination="pa.rb.schadeOpslaanResponseQueue" ref="schadeOpslaanResponseReciever"
                      method="onMessage"/>
    </jms:listener-container>







	<!-- Opvragen Persoon -->
    <bean id="opvragenPersoonRequestReciever" class="nl.dias.messaging.reciever.OpvragenPersoonRequestReciever"/>

	<jms:listener-container container-type="default" connection-factory="connectionFactory" acknowledge="auto">
		<jms:listener destination="tb.rb.opvragenPersoonRequestQueue" ref="opvragenPersoonRequestReciever"
                      method="onMessage"/>
	</jms:listener-container>
	<!-- // Opvragen Persoon -->

	<!-- Verwijderen Relaties -->
    <bean id="verwijderRelatiesRequestReciever" class="nl.dias.messaging.reciever.VerwijderRelatiesRequestReciever"/>

    <jms:listener-container container-type="default" connection-factory="connectionFactory" acknowledge="auto">
		<jms:listener destination="rb.verwijderRelatiesRequestQueue" ref="verwijderRelatiesRequestReciever"
                      method="onMessage"/>
    </jms:listener-container>
	<!-- // Verwijderen Relaties -->

	<!-- Verwijderen Bedrijven -->
    <bean id="verwijderBedrijvenRequestReciever" class="nl.dias.messaging.reciever.VerwijderBedrijvenRequestReciever"/>

	<jms:listener-container container-type="default" connection-factory="connectionFactory" acknowledge="auto">
		<jms:listener destination="rb.verwijderBedrijvenRequestQueue" ref="verwijderBedrijvenRequestReciever"
                      method="onMessage"/>
	</jms:listener-container>
	<!-- // Verwijderen Bedrijven -->

    <bean id="beindigenPolisRequestDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="rb.pa.beindigenPolisRequestQueue"/>
    </bean>
    <bean id="beindigenPolisRequestTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="beindigenPolisRequestDestination"/>
    </bean>
    <bean id="beindigenPolisRequestSender" class="nl.dias.messaging.sender.BeindigenPolisRequestSender">
        <constructor-arg index="0" ref="beindigenPolisRequestTemplate"/>
    </bean>



	<context:annotation-config/>

	<bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer"/>
        <property name="targetMethod" value="initLogging"/>
		<property name="arguments">
			<list>
				<value>djfc.log4j.xml</value>
			</list>
		</property>
	</bean>

	<!--<bean id="inkomendRequestRepository" class="nl.lakedigital.djfc.repository.InkomendRequestRepository" depends-on="sessionFactory">-->
	<!--<property name="sessionFactory" ref="sessionFactory" />-->
	<!--</bean>-->
	<!---->
	<!--<bean id="inkomendRequestService" class="nl.lakedigital.djfc.service.InkomendRequestService" depends-on="inkomendRequestRepository">-->
	<!--<property name="inkomendRequestRepository" ref="inkomendRequestRepository" />-->
	<!--</bean>-->


    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<!--<property name="uniqueResourceName" value="NonXA_DataSource" />-->
		<!--<property name="minPoolSize" value="2" />-->
		<!--<property name="maxPoolSize" value="30" />-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${djfc.db.name}"/>
        <property name="username" value="${djfc.db.user}"/>
        <property name="password" value="${djfc.db.pass}"/>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>nl.dias</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="dataSource"/>
        <property name="changeLog" value="classpath:databaseChangeLog.xml"/>
	</bean>

    <bean id="inkomendRequestRepository" class="nl.dias.repository.trackandtraceid.InkomendRequestRepository"
          depends-on="sessionFactory">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="inkomendRequestService" class="nl.dias.service.trackandtraceid.InkomendRequestService"
          depends-on="inkomendRequestRepository">
        <property name="inkomendRequestRepository" ref="inkomendRequestRepository"/>
    </bean>

	<bean id="adresClient" class="nl.lakedigital.djfc.client.oga.AdresClient">
        <constructor-arg value="${oga.url}"/>
        <property name="metricsService" ref="metricsService"/>
	</bean>
	<bean id="bijlageClient" class="nl.lakedigital.djfc.client.oga.BijlageClient">
        <constructor-arg value="${oga.url}"/>
        <property name="metricsService" ref="metricsService"/>
	</bean>
	<bean id="communicatieClient" class="nl.lakedigital.djfc.client.communicatie.CommunicatieClient">
        <constructor-arg value="${oga.url}"/>
	</bean>
	<bean id="groepBijlagesClient" class="nl.lakedigital.djfc.client.oga.GroepBijlagesClient">
        <constructor-arg value="${oga.url}"/>
        <property name="metricsService" ref="metricsService"/>
	</bean>
	<bean id="opmerkingClient" class="nl.lakedigital.djfc.client.oga.OpmerkingClient">
        <constructor-arg value="${oga.url}"/>
        <property name="metricsService" ref="metricsService"/>
	</bean>
	<bean id="rekeningClient" class="nl.lakedigital.djfc.client.oga.RekeningClient">
        <constructor-arg value="${oga.url}"/>
        <property name="metricsService" ref="metricsService"/>
	</bean>
	<bean id="telefoonnummerClient" class="nl.lakedigital.djfc.client.oga.TelefoonnummerClient">
        <constructor-arg value="${oga.url}"/>
        <property name="metricsService" ref="metricsService"/>
	</bean>
	<bean id="telefonieBestandClient" class="nl.lakedigital.djfc.client.oga.TelefonieBestandClient">
        <constructor-arg value="${oga.url}"/>
	</bean>
	<bean id="taakClient" class="nl.lakedigital.djfc.client.taakbeheer.TaakClient">
        <constructor-arg value="${tb.url}"/>
    </bean>
    <bean id="polisClient" class="nl.lakedigital.djfc.client.polisadministratie.PolisClient">
        <constructor-arg value="${pa.url}"/>
        <property name="metricsService" ref="metricsService"/>
    </bean>
    <bean id="schadeClient" class="nl.lakedigital.djfc.client.polisadministratie.SchadeClient">
        <constructor-arg value="${pa.url}"/>
        <property name="metricsService" ref="metricsService"/>
    </bean>
    <bean id="identificatieClient" class="nl.lakedigital.djfc.client.identificatie.IdentificatieClient">
        <constructor-arg value="${id.url}"/>
        <property name="metricsService" ref="metricsService"/>
	</bean>

    <import resource="applicationcontextJms/senders/rb.oga.verwijderEntiteitRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.tb.taakOpslaan.xml"/>
    <import resource="applicationcontextJms/senders/verwijderEntiteitenRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.pa.polisOpslaanRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.pa.polisVerwijderenRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.oga.opslaanEntiteitenRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.pa.schadeOpslaanRequest.xml"/>
    <import resource="applicationcontextJms/senders/id.entiteitenOpgeslagenRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.lb.licentieToegevoegdRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.lb.licentieVerwijderdRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.lb.kantoorAangemeldRequest.xml"/>
    <import resource="applicationcontextJms/senders/rb.co.wachtwoordVergetenRequest.xml"/>
</beans>