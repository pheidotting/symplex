<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:component-scan base-package="nl.dias"/>
    <context:component-scan base-package="nl.lakedigital.as.taakbeheer.client"/>

    <bean id="headerFilter" class="nl.dias.web.filter.HeaderFilter"/>

    <!--
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="url" value="jdbc:mysql://89.18.180.239:3306/patrick_unittest"/>
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="username" value="patrick_unittest"/>
    <property name="password" value="7jAASQFX"/>
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        <property name="url" value="jdbc:hsqldb:hsql://localhost:65086/barb-bedrijfsbeheer" />
        <property name="username" value="SA" />
        <property name="password" value="" />

    </bean>
    -->

    <bean id="MariaDbServer" class="nl.dias.commons.MariaDBServer" init-method="init">
        <!--        <property name="database" value="mem:embedded" />
                <property name="dbName" value="djfc-relatiebeheer" />
                <property name="port" value="65086" />-->
    </bean>

    <bean id="dataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" depends-on="MariaDbServer">
        <property name="uniqueResourceName" value="NonXA_DataSource"/>
        <property name="minPoolSize" value="2"/>
        <property name="maxPoolSize" value="30"/>
        <!--
       <property name="url" value="jdbc:hsqldb:hsql://localhost:65086/djfc-relatiebeheer" />
       <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
       -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/test"/>
        <!--
        <property name="user" value="SA"/>
        -->
        <property name="user" value=""/>
        <property name="password" value=""/>
    </bean>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="dias"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="false"/>
                <!--
                <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
                -->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
            </bean>
        </property>
        <property name="persistenceUnitManager">
            <bean class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
                <property name="defaultDataSource" ref="dataSource"/>
            </bean>
        </property>
        <!--
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
        -->
    </bean>

    <context:component-scan base-package="nl.dias.repository">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>


    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--
    <context:annotation-config/>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="persistenceAnnotation"
          class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
-->
    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="dataSource"/>
        <property name="changeLog" value="classpath:databaseChangelog.xml"/>
    </bean>
    <!--
        <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
-->
        <bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp" init-method="init" destroy-method="shutdownWait">
            <constructor-arg>
                <props>
                    <prop key="com.atomikos.icatch.tm_unique_name">tm_mdl</prop>
                    <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
                    <prop key="com.atomikos.icatch.enable_logging">false</prop>
                </props>
            </constructor-arg>
        </bean>


        <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close" depends-on="userTransactionService">
            <property name="forceShutdown" value="false"/>
            <property name="startupTransactionService" value="false"/>
        </bean>

        <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
            <property name="transactionTimeout" value="90"/>
        </bean>

        <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
            <property name="transactionManager" ref="atomikosTransactionManager"/>
            <property name="userTransaction" ref="atomikosUserTransaction"/>
            <property name="allowCustomIsolationLevels" value="true"/>
            <property name="defaultTimeout" value="90"/>
        </bean>
    <!--
            <import resource="applicationContext-jms.xml" />
        -->
    <!-- Activemq connection factory -->
    <bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <constructor-arg index="0" value="tcp://localhost:61616"/>
    </bean>

    <!-- ConnectionFactory Definition -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg ref="amqConnectionFactory"/>
    </bean>

    <!-- Aanmaken Taak -->
    <!-- Default Destination Queue Definition -->
    <bean id="aanmakenTaakDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="aanmakenTaakQueue"/>
    </bean>

    <!-- aanmakenTaakTemplate Definition -->
    <bean id="aanmakenTaakTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="aanmakenTaakDestination"/>
    </bean>

    <!-- Message Sender Definition -->
    <bean id="aanmakenTaakSender" class="nl.dias.messaging.sender.AanmakenTaakSender">
        <constructor-arg index="0" ref="aanmakenTaakTemplate"/>
    </bean>
    <!-- /Aanmaken Taak -->

    <!-- Adres aangevuld -->
    <!-- Default Destination Queue Definition -->
    <bean id="adresAangevuldDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="adresAangevuldQueue"/>
    </bean>

    <bean id="adresAangevuldTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="adresAangevuldDestination"/>
    </bean>

    <!-- Message Sender Definition -->
    <bean id="adresAangevuldSender" class="nl.dias.messaging.sender.AdresAangevuldSender">
        <constructor-arg index="0" ref="adresAangevuldTemplate"/>
    </bean>
    <!-- /Adres aangevuld -->

    <!-- E-mailadres aangevuld -->
    <bean id="emailAdresAangevuldDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="emailAdresAangevuldQueue"/>
    </bean>

    <bean id="emailAdresAangevuldTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="emailAdresAangevuldDestination"/>
    </bean>

    <!-- Message Sender Definition -->
    <bean id="emailAdresAangevuldSender" class="nl.dias.messaging.sender.EmailAdresAangevuldSender">
        <constructor-arg index="0" ref="emailAdresAangevuldTemplate"/>
    </bean>
    <!-- /E-mailadres aangevuld -->

    <!-- BSN aangevuld -->
    <bean id="bsnAangevuldDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="bsnAangevuldQueue"/>
    </bean>

    <bean id="bsnAangevuldTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" ref="bsnAangevuldDestination"/>
    </bean>

    <!-- Message Sender Definition -->
    <bean id="bsnAangevuldSender" class="nl.dias.messaging.sender.BsnAangevuldSender">
        <constructor-arg index="0" ref="bsnAangevuldTemplate"/>
    </bean>
    <!-- /BSN aangevuld -->

    <bean name="verstuurAanmakenTaakJob"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="nl.dias.batch.jobs.VerstuurAanmakenTaakJob"/>
    </bean>
</beans>
